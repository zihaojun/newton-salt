filter {
	if [message] =~ /^[\s]*$/{
		drop {}
	}
	if [type] == "glusterfs" {
		ruby {
			code => "event['@timestamp'] = event['@timestamp'].localtime('+08:00')"
		}
		grok {
			patterns_dir => "/opt/logstash/patters"
			match => {"message" => "%{GLUSTERFS_LOG}"}
			add_field => [ "received_at", "%{@timestamp}" ]
		}
		date {
			match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSSSSS" ]
		}
		translate {
			field => "glusterfs_level"
			dictionary => [
				"M","EMERGENCY",
				"A","ALERT",
				"C","CRITICAL",
				"E","ERROR",
				"W","WARNING",
				"N","NOTICE",
				"I","INFO",
				"D","DEBUG",
				"T","TRACE"
			]
			fallback => "UNKNOW"
			destination => "level"
		}
		if "_grokparsefailure" in [tags] {
			 mutate{
				add_field => ["level","UNKNOW"]
			}
		}
		mutate {
			remove_field => "glusterfs_level"
			remove_field => "@version"
			remove_field => "timestamp"
		}
	}
}



