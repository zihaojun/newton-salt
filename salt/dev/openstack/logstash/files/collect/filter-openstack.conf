filter {
	if [message] =~ /^[\s]*$/{
		drop {}
	}
	if [type] in ['neutron','ceilometer','cinder','keystone','nova','glance']{
		ruby{
			code => "event['@timestamp'] = event['@timestamp'].localtime('+08:00')"
    	}
		grok{
			patterns_dir => "/opt/logstash/patterns"
			match => { "message" => "%{OPENSTACK_LOG}"}
			add_field => [ "received_at", "%{@timestamp}" ]
		}
		date{
			match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
			timezone => "Asia/Shanghai"
		}
		mutate{
			uppercase => ["level"]
			remove_field => "@version"
			remove_field => "timestamp"
		}
		if "_grokparsefailure" in [tags] {
			mutate{
				add_field => ["level","UNKNOW"]
			}
		}
		if [tags] == [] {
			mutate {
				remove_field => "tags"
			}
		}
	}
}
